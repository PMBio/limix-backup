import distutils.sysconfig
import numpy
import os
import sys
#get all the build variables we need
Import('env','mymode','build_prefix','external_include','limix_include','liblimix','libnlopt','build_options')
localenv = env.Clone()

print "Python site-packages directory: %s" % distutils.sysconfig.get_python_lib()

#detect python and numpy include directories
python_lib_path = distutils.sysconfig.get_python_lib()
python_inc_path = distutils.sysconfig.get_python_inc()
numpy_inc_path = numpy.get_include()

#figure out target install path
abs_build_prefix = os.path.join('#',build_prefix)


#add python path and numpy path
localenv.Append(CPPPATH = [python_inc_path,numpy_inc_path])
localenv.Append(SWIGFLAGS=['-python','-c++'])
localenv.Append(SWIGPATH =[limix_include,external_include,'#/src/interfaces/python'])
localenv.Append(LIBS=['limix','nlopt'])
LIBPATH = [python_lib_path,os.path.join(abs_build_prefix,'limix'),os.path.join(abs_build_prefix,'nlopt')]
#add python lib path, windows needs this..
LIBPATH.append(os.path.join(sys.prefix,'libs'))
localenv.Append(LIBPATH=LIBPATH)

#dynamic lookups, needed with MAC at least
if(localenv['PLATFORM']=='darwin'):
	localenv.Append(LINKFLAGS = ['-undefined', 'dynamic_lookup'])

#build from .i file
srclst = ['limix.i']
localenv.Depends(srclst, [libnlopt,liblimix])

if sys.platform=='win32':
   #rename modules
   module_in = "_core.dll"
   module_out = "_core.pyd"
else:
   module_in = "_core.so"
   module_out = "_core.so"



limixlib_swig=localenv.LoadableModule('_core',srclst)

src_dir    = os.path.join('#','src','interfaces','python','limix')
#copy files over for limix modules

localenv.Depends(src_dir, [limixlib_swig])
copy=Command(target="limix",source=src_dir,action = [Delete("$TARGET"), 
	Copy("$TARGET","$SOURCE"),
	Move("$TARGET",os.path.join(build_prefix,"interfaces","python","core.py")),
	Move(os.path.join("$TARGET",module_out),os.path.join(build_prefix,"interfaces","python",module_in))
	])

#enforce build:
AlwaysBuild([copy])
Return('limixlib_swig')
